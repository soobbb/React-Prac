{"ast":null,"code":"var _jsxFileName = \"/Users/jeonsubin/Reactprac/src/useEffect.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Lifecycle = () => {\n  _s();\n  // const [count, setCount] = useState(0);  // useEffect는 원하는 값을 변화하는 순간에만 선택적으로\n  // const [text, setText] = useState(\"\");   // 사용할 수 있게 해줌 \n\n  // useEffect(()=> {\n  //     console.log(\"Mount!\");\n  // }, []);\n\n  // useEffect(()=>{\n  //     console.log(\"Update!\");\n  // })\n\n  // useEffect(()=>{\n  //     console.log(`count is update: ${count}`);\n  //     if(count > 5){\n  //         alert(\"count가 5를 넘었습니다. 따라서 1로 초기화하빈다\");\n  //         setCount(1);\n  //     }\n  // }, [count])\n\n  useEffect(() => {\n    console.log(`text is update: ${text}`);\n  }, [text]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [count, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCount(count + 1),\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        value: text,\n        onChange: e => setText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 12\n  }, this);\n};\n_s(Lifecycle, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Lifecycle;\nexport default Lifecycle;\nvar _c;\n$RefreshReg$(_c, \"Lifecycle\");","map":{"version":3,"names":["React","useEffect","useState","Lifecycle","console","log","text","padding","count","setCount","e","setText","target","value"],"sources":["/Users/jeonsubin/Reactprac/src/useEffect.js"],"sourcesContent":["import React,{useEffect, useState} from \"react\";\n\nconst Lifecycle = () => {\n\n    // const [count, setCount] = useState(0);  // useEffect는 원하는 값을 변화하는 순간에만 선택적으로\n    // const [text, setText] = useState(\"\");   // 사용할 수 있게 해줌 \n\n    // useEffect(()=> {\n    //     console.log(\"Mount!\");\n    // }, []);\n\n    // useEffect(()=>{\n    //     console.log(\"Update!\");\n    // })\n\n    // useEffect(()=>{\n    //     console.log(`count is update: ${count}`);\n    //     if(count > 5){\n    //         alert(\"count가 5를 넘었습니다. 따라서 1로 초기화하빈다\");\n    //         setCount(1);\n    //     }\n    // }, [count])\n\n    useEffect(()=>{\n        console.log(`text is update: ${text}`);\n    }, [text]);\n\n    return <div style={{ padding: 20 }}>\n        <div>\n            {count}\n            <button onClick= {() => setCount(count +1)}>+</button>\n        </div>\n        <div>\n            <input value={text} onChange={(e)=>setText(e.target.value)} />\n        </div>\n        </div>\n}\n\nexport default Lifecycle;"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAAC;AAEhD,MAAMC,SAAS,GAAG,MAAM;EAAA;EAEpB;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEAF,SAAS,CAAC,MAAI;IACVG,OAAO,CAACC,GAAG,CAAE,mBAAkBC,IAAK,EAAC,CAAC;EAC1C,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAEV,oBAAO;IAAK,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAG,CAAE;IAAA,wBAC/B;MAAA,WACKC,KAAK,eACN;QAAQ,OAAO,EAAG,MAAMC,QAAQ,CAACD,KAAK,GAAE,CAAC,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAW;IAAA;MAAA;MAAA;MAAA;IAAA,QACpD,eACN;MAAA,uBACI;QAAO,KAAK,EAAEF,IAAK;QAAC,QAAQ,EAAGI,CAAC,IAAGC,OAAO,CAACD,CAAC,CAACE,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QAC5D;EAAA;IAAA;IAAA;IAAA;EAAA,QACA;AACd,CAAC;AAAA,GAlCKV,SAAS;AAAA,KAATA,SAAS;AAoCf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}